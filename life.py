import numpy

def life(b):
    while True:
        a = b << 1
        a |= 1

        a[1:, :] <<= b[:-1, :]
        a[:-1, :] <<= b[1:, :]
        a[:, 1:] <<= b[:, :-1]
        a[:, :-1] <<= b[:, 1:]
        a[1:, 1:] <<= b[:-1, :-1]
        a[:-1, :-1] <<= b[1:, 1:]
        a[1:, :-1] <<= b[:-1, 1:]
        a[:-1, 1:] <<= b[1:, :-1]

        a &= 0b1000
        a >>= 3

        yield a
        b = a

def board(width, height):
    return numpy.zeros((height, width), dtype=numpy.uint8)

def pattern(*args):
    return numpy.array(args, dtype=numpy.uint8)

def emplace(board, at, pattern):
    h, w = pattern.shape
    y, x = at
    board[y:y+h, x:x+w] = pattern

blinker = pattern(
    [1,1,1],
)

beacon = pattern(
  [1,1,0,0],
  [1,1,0,0],
  [0,0,1,1],
  [0,0,1,1],
)

pulsar = pattern(
  [0,0,1,1,1,0,0,0,1,1,1,0,0],
  [0,0,0,0,0,0,0,0,0,0,0,0,0],
  [1,0,0,0,0,1,0,1,0,0,0,0,1],
  [1,0,0,0,0,1,0,1,0,0,0,0,1],
  [1,0,0,0,0,1,0,1,0,0,0,0,1],
  [0,0,1,1,1,0,0,0,1,1,1,0,0],
  [0,0,0,0,0,0,0,0,0,0,0,0,0],
  [0,0,1,1,1,0,0,0,1,1,1,0,0],
  [1,0,0,0,0,1,0,1,0,0,0,0,1],
  [1,0,0,0,0,1,0,1,0,0,0,0,1],
  [1,0,0,0,0,1,0,1,0,0,0,0,1],
  [0,0,0,0,0,0,0,0,0,0,0,0,0],
  [0,0,1,1,1,0,0,0,1,1,1,0,0],
)

glider = pattern(
  [0,1,0],
  [0,0,1],
  [1,1,1],
)
